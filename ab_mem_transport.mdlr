ITERATIONS = 100000
TIME_STEP = 1e-4
VACANCY_SEARCH_DISTANCE = 100
 
INCLUDE_FILE = "icogeometry.mdl"

MODIFY_SURFACE_REGIONS
{
   EC[wall] {
      SURFACE_CLASS = reflect
   }
   EC[ALL] {
      SURFACE_CLASS = reflect
   }
   CP[PM] {
      SURFACE_CLASS = reflect
   }
   CP[ALL] {
      SURFACE_CLASS = reflect
   }
}

DEFINE_SURFACE_CLASSES
{
   reflect {
   REFLECTIVE = ALL_MOLECULES
   }
}

#DEFINE_MOLECULES
{
  A() {
      DIFFUSION_CONSTANT_3D = 1e-4
  }
  B() {
      DIFFUSION_CONSTANT_3D = 1e-4
  }
  Mem() {
      DIFFUSION_CONSTANT_2D = 1e-4
  }
  MemA() {
      DIFFUSION_CONSTANT_2D = 1e-4
  }
}

#DEFINE_REACTIONS
{
   A()@EC + Mem()@PM -> MemA()@PM [1e6]
   MemA()@PM -> Mem()@PM + A()@CP [0.1]
   A()@CP -> B()@CP [1e6]
}

#INSTANTIATE Scene OBJECT
{
  EC OBJECT EC {}
  CP OBJECT CP {
    PARENT = EC
    MEMBRANE = PM OBJECT CP[ALL]
  }

  ligand_rel RELEASE_SITE {
    SHAPE = Scene.EC[ALL] - Scene.CP[ALL]
    MOLECULE = A()@EC
    NUMBER_TO_RELEASE = 1000
    RELEASE_PROBABILITY = 1
  }
  mem_rel RELEASE_SITE {
    SHAPE = Scene.CP[PM]
    MOLECULE = Mem()@PM
    NUMBER_TO_RELEASE = 1000
    RELEASE_PROBABILITY = 1
  }
}
 
/* Observables bloc */
#REACTION_DATA_OUTPUT
{
   STEP = 1e-4

   {COUNT[A()@EC, WORLD]} => "./react_data/aec.dat"
   {COUNT[A()@CP, WORLD]} => "./react_data/acp.dat"
   {COUNT[MemA(), WORLD]} => "./react_data/MemA.dat"
   {COUNT[B(), WORLD]} => "./react_data/b.dat"
}
